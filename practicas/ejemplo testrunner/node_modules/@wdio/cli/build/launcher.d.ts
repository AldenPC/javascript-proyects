/// <reference types="webdriverio/webdriverio-core" />
/// <reference types="webdriverio" />
/// <reference types="@wdio/cucumber-framework" />
export default Launcher;
declare class Launcher {
    constructor(configFilePath: any, args?: {}, isWatchMode?: boolean);
    args: {};
    configFilePath: any;
    configParser: ConfigParser;
    isWatchMode: boolean;
    runner: any;
    interface: CLInterface;
    isMultiremote: boolean;
    exitCode: number;
    hasTriggeredExitRoutine: boolean;
    hasStartedAnyProcess: boolean;
    schedule: any[];
    rid: any[];
    runnerStarted: number;
    runnerFailed: number;
    run(): Promise<any>;
    launcher: import("webdriverio").ServiceInstance[] | undefined;
    runMode(config: any, caps: any): Promise<any>;
    resolve: ((value?: any) => void) | undefined;
    runSpecs(): boolean;
    getNumberOfRunningInstances(): number;
    getNumberOfSpecsLeft(): number;
    startInstance(specs: any[], caps: any, cid: number, rid: string, retries: number): Promise<void>;
    getRunnerId(cid: number): string;
    endHandler({ cid, exitCode, specs, retries }: number): void;
    exitHandler(callback: any): any;
    isWatchModeHalted(): boolean;
}
import { ConfigParser } from "@wdio/config";
import CLInterface from "./interface";
//# sourceMappingURL=launcher.d.ts.map